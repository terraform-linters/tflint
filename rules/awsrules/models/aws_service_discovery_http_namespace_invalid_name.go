// This file generated by `generator/`. DO NOT EDIT

package models

import (
	"log"

	hcl "github.com/hashicorp/hcl/v2"
	"github.com/terraform-linters/tflint/tflint"
)

// AwsServiceDiscoveryHTTPNamespaceInvalidNameRule checks the pattern is valid
type AwsServiceDiscoveryHTTPNamespaceInvalidNameRule struct {
	resourceType  string
	attributeName string
	max           int
}

// NewAwsServiceDiscoveryHTTPNamespaceInvalidNameRule returns new rule with default attributes
func NewAwsServiceDiscoveryHTTPNamespaceInvalidNameRule() *AwsServiceDiscoveryHTTPNamespaceInvalidNameRule {
	return &AwsServiceDiscoveryHTTPNamespaceInvalidNameRule{
		resourceType:  "aws_service_discovery_http_namespace",
		attributeName: "name",
		max:           1024,
	}
}

// Name returns the rule name
func (r *AwsServiceDiscoveryHTTPNamespaceInvalidNameRule) Name() string {
	return "aws_service_discovery_http_namespace_invalid_name"
}

// Enabled returns whether the rule is enabled by default
func (r *AwsServiceDiscoveryHTTPNamespaceInvalidNameRule) Enabled() bool {
	return true
}

// Severity returns the rule severity
func (r *AwsServiceDiscoveryHTTPNamespaceInvalidNameRule) Severity() string {
	return tflint.ERROR
}

// Link returns the rule reference link
func (r *AwsServiceDiscoveryHTTPNamespaceInvalidNameRule) Link() string {
	return ""
}

// Check checks the pattern is valid
func (r *AwsServiceDiscoveryHTTPNamespaceInvalidNameRule) Check(runner *tflint.Runner) error {
	log.Printf("[TRACE] Check `%s` rule for `%s` runner", r.Name(), runner.TFConfigPath())

	return runner.WalkResourceAttributes(r.resourceType, r.attributeName, func(attribute *hcl.Attribute) error {
		var val string
		err := runner.EvaluateExpr(attribute.Expr, &val)

		return runner.EnsureNoError(err, func() error {
			if len(val) > r.max {
				runner.EmitIssue(
					r,
					"name must be 1024 characters or less",
					attribute.Expr.Range(),
				)
			}
			return nil
		})
	})
}
